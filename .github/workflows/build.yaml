# .github/workflows/build.yml
name: Build Docker Image

on:
  #push:
  #  branches:
  #    - main
  schedule:
    - cron: '45 8 * * *' # convert time ITC to PST
  workflow_dispatch:  # Manual trigger

jobs:
  build:
    runs-on: ubuntu-latest #need to confirm this with austin

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          TAG=$(date +%Y%m%d%H%M%S)  # Using timestamp as the tag for uniqueness
          docker build -t ${{ secrets.DOCKER_USERNAME }}/hello-world:$TAG .
          docker push ${{ secrets.DOCKER_USERNAME }}/hello-world:$TAG
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV
          echo "::set-output name=image_tag::$IMAGE_TAG" #Make the IMAGE_TAG available as an output
    outputs:
      image_tag: ${{ steps.build_image.outputs.image_tag }}
      
      #- name: Save the image tag as an artifact
      #  uses: actions/upload-artifact@v2
      #  with:
      #     name: image-tag
      #    path: image-tag.txt


#      - name: Verify Docker Image Build and Push
#        run: |
#          # Check if the Docker image exists in the local images list
#          docker images | grep ${{ secrets.DOCKER_USERNAME }}/hello-world:${{ env.TAG }}
#          if [ $? -ne 0 ]; then
#            echo "Docker image build or push failed!"
#            exit 1
#          fi
#          echo "Verifying if the Docker image exists on DockerHub..."
#          IMAGE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/hello-world/tags/${{ env.TAG }}")
#          if [ "$IMAGE_EXISTS" -ne 200 ]; then
#            echo "Docker image was not pushed to DockerHub successfully!"
#            exit 1
#          fi
